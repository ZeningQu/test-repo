"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var base_1 = require("./base");
/**
 * Effectivenss score that penalize size for bar and tick
 */
var SizeChannelScorer = /** @class */ (function (_super) {
    __extends(SizeChannelScorer, _super);
    function SizeChannelScorer() {
        return _super.call(this, 'SizeChannel') || this;
    }
    SizeChannelScorer.prototype.initScore = function () {
        return {
            bar_size: -2,
            tick_size: -2
        };
    };
    SizeChannelScorer.prototype.getScore = function (specM, _, __) {
        var _this = this;
        var mark = specM.getMark();
        return specM.getEncodings().reduce(function (featureScores, encQ) {
            var feature = mark + '_' + encQ.channel;
            var featureScore = _this.getFeatureScore(feature);
            if (featureScore) {
                featureScores.push(featureScore);
            }
            return featureScores;
        }, []);
    };
    return SizeChannelScorer;
}(base_1.Scorer));
exports.SizeChannelScorer = SizeChannelScorer;
//# sourceMappingURL=sizechannel.js.map