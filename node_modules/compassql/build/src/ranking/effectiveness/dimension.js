"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var base_1 = require("./base");
var encoding_1 = require("../../query/encoding");
/**
 * Penalize if facet channels are the only dimensions
 */
var DimensionScorer = /** @class */ (function (_super) {
    __extends(DimensionScorer, _super);
    function DimensionScorer() {
        return _super.call(this, 'Dimension') || this;
    }
    DimensionScorer.prototype.initScore = function () {
        return {
            row: -2,
            column: -2,
            color: 0,
            opacity: 0,
            size: 0,
            shape: 0
        };
    };
    DimensionScorer.prototype.getScore = function (specM, _, __) {
        var _this = this;
        if (specM.isAggregate()) {
            specM.getEncodings().reduce(function (maxFScore, encQ) {
                if (encoding_1.isFieldQuery(encQ) && !encQ.aggregate) {
                    var featureScore = _this.getFeatureScore(encQ.channel + '');
                    if (featureScore && featureScore.score > maxFScore.score) {
                        return featureScore;
                    }
                }
                return maxFScore;
            }, { type: 'Dimension', feature: 'No Dimension', score: -5 });
        }
        return [];
    };
    return DimensionScorer;
}(base_1.Scorer));
exports.DimensionScorer = DimensionScorer;
//# sourceMappingURL=dimension.js.map