import { Axis } from 'vega-lite/build/src/axis';
import { BinParams } from 'vega-lite/build/src/bin';
import { Scale } from 'vega-lite/build/src/scale';
import { Legend } from 'vega-lite/build/src/legend';
import { SortField } from 'vega-lite/build/src/sort';
import { FieldQuery, ValueQuery, AutoCountQuery } from './query/encoding';
import { TransformQuery } from './query/transform';
export declare type Property = FlatProp | EncodingNestedProp;
export declare type FlatProp = MarkProp | TransformProp | EncodingTopLevelProp;
export declare type MarkProp = 'mark' | 'stack';
export declare type TransformProp = keyof TransformQuery;
export declare type EncodingTopLevelProp = keyof (FieldQuery & ValueQuery & AutoCountQuery);
export declare type EncodingNestedProp = BinProp | SortProp | ScaleProp | AxisProp | LegendProp;
export declare type EncodingNestedChildProp = keyof BinParams | keyof SortField | keyof Scale | keyof Axis | keyof Legend;
export declare type BaseEncodingNestedProp<P, T> = {
    parent: P;
    child: keyof T;
};
export declare type BinProp = BaseEncodingNestedProp<'bin', BinParams>;
export declare type SortProp = BaseEncodingNestedProp<'sort', SortField>;
export declare type ScaleProp = BaseEncodingNestedProp<'scale', Scale>;
export declare type AxisProp = BaseEncodingNestedProp<'axis', Axis>;
export declare type LegendProp = BaseEncodingNestedProp<'legend', Legend>;
export declare function isEncodingNestedProp(p: Property): p is EncodingNestedProp;
export declare const ENCODING_TOPLEVEL_PROPS: EncodingTopLevelProp[];
export declare function isEncodingTopLevelProperty(p: Property): boolean;
export declare const ENCODING_NESTED_PROP_PARENT_INDEX: {
    [key: string]: 1;
};
export declare function hasNestedProperty(prop: string): 1;
export declare const BIN_CHILD_PROPS: (keyof BinParams)[];
export declare const SORT_CHILD_PROPS: (keyof SortField)[];
export declare const SORT_PROPS: BaseEncodingNestedProp<"sort", SortField>[];
export declare const SCALE_PROPS: BaseEncodingNestedProp<"scale", Scale>[];
export declare const ENCODING_NESTED_PROPS: EncodingNestedProp[];
export declare function toKey(p: Property): string;
export declare function fromKey(k: string): Property;
export declare function getEncodingNestedProp(parent: EncodingTopLevelProp, child: EncodingNestedChildProp): any;
export declare function isEncodingProperty(prop: Property): boolean;
export declare const ALL_ENCODING_PROPS: Property[];
export declare const DEFAULT_PROP_PRECEDENCE: Property[];
export declare namespace Property {
    const MARK: 'mark';
    const TRANSFORM: 'transform';
    const STACK: 'stack';
    const CHANNEL: 'channel';
    const AGGREGATE: 'aggregate';
    const AUTOCOUNT: 'autoCount';
    const BIN: 'bin';
    const HAS_FN: 'hasFn';
    const TIMEUNIT: 'timeUnit';
    const FIELD: 'field';
    const TYPE: 'type';
    const SORT: 'sort';
    const SCALE: 'scale';
    const AXIS: 'axis';
    const LEGEND: 'legend';
}
