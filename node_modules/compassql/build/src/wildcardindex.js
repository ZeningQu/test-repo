"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var property_1 = require("./property");
var propindex_1 = require("./propindex");
var WildcardIndex = /** @class */ (function () {
    function WildcardIndex() {
        this._mark = undefined;
        this._encodings = {};
        this._encodingIndicesByProperty = new propindex_1.PropIndex();
    }
    WildcardIndex.prototype.setEncodingProperty = function (index, prop, wildcard) {
        var encodingsIndex = this._encodings;
        // Init encoding index and set prop
        var encIndex = encodingsIndex[index] = encodingsIndex[index] || new propindex_1.PropIndex();
        encIndex.set(prop, wildcard);
        // Initialize indicesByProperty[prop] and add index
        var indicesByProp = this._encodingIndicesByProperty;
        indicesByProp.set(prop, (indicesByProp.get(prop) || []));
        indicesByProp.get(prop).push(index);
        return this;
    };
    WildcardIndex.prototype.hasEncodingProperty = function (index, prop) {
        return !!this._encodings[index] && this._encodings[index].has(prop);
    };
    WildcardIndex.prototype.hasProperty = function (prop) {
        if (property_1.isEncodingProperty(prop)) {
            return this.encodingIndicesByProperty.has(prop);
        }
        if (prop === 'mark') {
            return !!this.mark;
        }
        /* istanbul ignore next */
        throw new Error('Unimplemented for property ' + prop);
    };
    WildcardIndex.prototype.isEmpty = function () {
        return !this.mark && this.encodingIndicesByProperty.size() === 0;
    };
    WildcardIndex.prototype.setMark = function (mark) {
        this._mark = mark;
        return this;
    };
    Object.defineProperty(WildcardIndex.prototype, "mark", {
        get: function () {
            return this._mark;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(WildcardIndex.prototype, "encodings", {
        get: function () {
            return this._encodings;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(WildcardIndex.prototype, "encodingIndicesByProperty", {
        get: function () {
            return this._encodingIndicesByProperty;
        },
        enumerable: true,
        configurable: true
    });
    return WildcardIndex;
}());
exports.WildcardIndex = WildcardIndex;
//# sourceMappingURL=wildcardindex.js.map